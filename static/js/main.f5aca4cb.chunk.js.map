{"version":3,"sources":["components/TodoList/todosSlice.js","components/Todo/Todo.js","redux/selector.js","components/TodoList/TodoList.js","components/Filters/filtersSlice.js","components/Filters/Filters.js","App.js","redux/store.js","index.js"],"names":["todosSlice","createSlice","name","initialState","status","todos","reducers","addTodo","state","action","push","payload","toggleTodoStatus","currentTodo","find","todo","id","completed","extraReducers","builder","addCase","fetchTodos","pending","fulfilled","addNewTodo","updateTodo","findIndex","createAsyncThunk","a","axios","get","res","data","newTodo","fetch","method","body","JSON","stringify","json","priorityColorMapping","High","Medium","Low","Todo","priority","useState","checked","setChecked","dispatch","useDispatch","justify","style","marginBottom","opacity","textDecoration","onChange","color","margin","todoRemainingSelector","createSelector","todoList","filters","search","priorities","searchText","filter","length","includes","TodoList","todoName","setTodoName","setPriority","useSelector","height","span","overflowY","map","item","Group","display","compact","value","e","target","handleInputChange","defaultValue","Option","label","type","onClick","uuidv4","filtersSlice","searchFilterChange","statusFilterChange","priorityFilterChange","Search","Input","Filters","setSearchText","filterStatus","setFilterStatus","filterPriority","setFilterPriority","Paragraph","fontWeight","marginTop","placeholder","actions","handleSearchTextChange","sm","handleStatusChange","mode","allowClear","width","Title","Typography","App","useEffect","flexDirection","backgroundColor","padding","boxShadow","borderRadius","textAlign","store","configureStore","reducer","todoListReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f5aca4cb.chunk.js","sourcesContent":["// const initValue = [\r\n//   { id: 1, name: 'Learn ReactJS', completed: true, priority: 'Medium' },\r\n//   { id: 2, name: 'Learn Redux', completed: false, priority: 'High' },\r\n//   { id: 3, name: 'Learn Bootstrap', completed: false, priority: 'Medium' },\r\n// ];\r\n// const todoReducer = (state = initValue, action) => {\r\n//   switch (action.type) {\r\n//     case 'todoList/addTodo':\r\n//       return [...state, action.payload];\r\n//     case 'todoList/toggleTodoStatus':\r\n//       return state.map((todo) =>\r\n//         todo.id === action.id ? { ...todo, completed: !todo.completed } : todo\r\n//       );\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n// export default todoReducer;\r\nimport axios from 'axios';\r\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\nconst todosSlice = createSlice({\r\n  name: 'todoList',\r\n  initialState: {\r\n    status: 'idle',\r\n    todos: [],\r\n  },\r\n  reducers: {\r\n    addTodo: (state, action) => {\r\n      state.push(action.payload);\r\n    }, // action creator\r\n    toggleTodoStatus: (state, action) => {\r\n      const currentTodo = state.find((todo) => todo.id === action.payload);\r\n      if (currentTodo) {\r\n        currentTodo.completed = !currentTodo.completed;\r\n      }\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchTodos.pending, (state, action) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(fetchTodos.fulfilled, (state, action) => {\r\n        state.todos = action.payload;\r\n        state.status = 'idle';\r\n      })\r\n      .addCase(addNewTodo.fulfilled, (state, action) => {\r\n        state.todos.push(action.payload);\r\n      })\r\n      .addCase(updateTodo.fulfilled, (state, action) => {\r\n        let currentTodo = state.todos.findIndex((todo) => todo.id === action.payload.id);\r\n        if (currentTodo !== -1) {\r\n          state.todos[currentTodo] = action.payload;\r\n        }\r\n      });\r\n  },\r\n});\r\n\r\n//THUNKS\r\n// createAsyncThunk('prefix', async function())\r\n\r\nexport const fetchTodos = createAsyncThunk('todos/fetchTodos', async () => {\r\n  const res = await axios.get('https://6293b734089f87a57ac4de6d.mockapi.io/list');\r\n  return res.data;\r\n});\r\n\r\nexport const addNewTodo = createAsyncThunk('todos/addNewTodo', async (newTodo) => {\r\n  const res = await fetch('https://6293b734089f87a57ac4de6d.mockapi.io/list', {\r\n    method: 'POST',\r\n    body: JSON.stringify(newTodo),\r\n  });\r\n  const data = await res.json();\r\n  return data;\r\n});\r\n\r\nexport const updateTodo = createAsyncThunk('todos/updateTodo', async (todo) => {\r\n  const res = await fetch(`https://6293b734089f87a57ac4de6d.mockapi.io/list/${todo.id}`, {\r\n    method: 'PUT',\r\n    body: JSON.stringify(todo),\r\n  });\r\n  const data = await res.json();\r\n  return data;\r\n});\r\n\r\nexport default todosSlice;\r\n","import { Row, Tag, Checkbox } from 'antd';\r\nimport { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateTodo } from '../TodoList/todosSlice';\r\n\r\nconst priorityColorMapping = {\r\n  High: 'red',\r\n  Medium: 'blue',\r\n  Low: 'gray',\r\n};\r\n\r\nconst Todo = ({ name, priority, completed, id }) => {\r\n  const [checked, setChecked] = useState(completed);\r\n  const dispatch = useDispatch();\r\n\r\n  const toggleCheckbox = () => {\r\n    setChecked(!checked);\r\n    dispatch(\r\n      updateTodo({\r\n        id,\r\n        completed: !completed,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Row\r\n      justify='space-between'\r\n      style={{\r\n        marginBottom: 3,\r\n        ...(checked ? { opacity: 0.5, textDecoration: 'line-through' } : {}),\r\n      }}\r\n    >\r\n      <Checkbox checked={checked} onChange={toggleCheckbox}>\r\n        {name}\r\n      </Checkbox>\r\n      <Tag color={priorityColorMapping[priority]} style={{ margin: 0 }}>\r\n        {priority}\r\n      </Tag>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst searchFilterSelector = (state) => state.filters.search;\r\nconst statusFilterSelector = (state) => state.filters.status;\r\nconst priorityFilterSelector = (state) => state.filters.priority;\r\n\r\nconst todoListSelector = (state) => {\r\n  return state.todoList.todos;\r\n};\r\n\r\nexport const todoRemainingSelector = createSelector(\r\n  todoListSelector,\r\n  statusFilterSelector,\r\n  priorityFilterSelector,\r\n  searchFilterSelector,\r\n  (todoList, status, priorities, searchText) => {\r\n    return todoList.filter((todo) => {\r\n      if (status === 'All') {\r\n        return priorities && priorities.length\r\n          ? todo.name.includes(searchText) && priorities.includes(todo.priority)\r\n          : todo.name.includes(searchText);\r\n      }\r\n      return (\r\n        todo.name.includes(searchText) &&\r\n        (status === 'Completed' ? todo.completed : !todo.completed) &&\r\n        (priorities && priorities.length > 0 ? priorities.includes(todo.priority) : true)\r\n      );\r\n    });\r\n  }\r\n);\r\n","import { Col, Row, Input, Button, Select, Tag } from 'antd';\r\nimport Todo from '../Todo/Todo.js';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { useState } from 'react';\r\n\r\nimport { addNewTodo } from './todosSlice.js';\r\nimport { todoRemainingSelector } from '../../redux/selector.js';\r\n\r\nexport default function TodoList() {\r\n  const [todoName, setTodoName] = useState('');\r\n  const [priority, setPriority] = useState('Medium');\r\n  let todoList = useSelector(todoRemainingSelector);\r\n\r\n  const dispatch = useDispatch();\r\n  const handleAddTodo = () => {\r\n    dispatch(\r\n      addNewTodo({\r\n        id: uuidv4(),\r\n        name: todoName,\r\n        completed: false,\r\n        priority: priority,\r\n      })\r\n    );\r\n\r\n    setTodoName('');\r\n    setPriority('Medium');\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    setTodoName(e.target.value);\r\n  };\r\n  const handleChangeSelect = (value) => {\r\n    setPriority(value);\r\n  };\r\n\r\n  return (\r\n    <Row style={{ height: 'calc(100% - 40px)' }}>\r\n      <Col span={24} style={{ height: 'calc(100% - 40px)', overflowY: 'auto' }}>\r\n        {todoList &&\r\n          todoList.length > 0 &&\r\n          todoList.map((item) => (\r\n            <Todo\r\n              id={item.id}\r\n              name={item.name}\r\n              completed={item.completed}\r\n              priority={item.priority}\r\n              key={item.id}\r\n            />\r\n          ))}\r\n      </Col>\r\n      <Col span={24}>\r\n        <Input.Group style={{ display: 'flex' }} compact>\r\n          <Input value={todoName} onChange={(e) => handleInputChange(e)} />\r\n          <Select defaultValue='Medium' value={priority} onChange={handleChangeSelect}>\r\n            <Select.Option value='High' label='High'>\r\n              <Tag color='red'>High</Tag>\r\n            </Select.Option>\r\n            <Select.Option value='Medium' label='Medium'>\r\n              <Tag color='blue'>Medium</Tag>\r\n            </Select.Option>\r\n            <Select.Option value='Low' label='Low'>\r\n              <Tag color='gray'>Low</Tag>\r\n            </Select.Option>\r\n          </Select>\r\n          <Button type='primary' onClick={handleAddTodo}>\r\n            Add\r\n          </Button>\r\n        </Input.Group>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n","// const initValue = {\r\n//   search: '',\r\n//   status: 'All',\r\n//   priority: [],\r\n// };\r\n// const filterReducer = (state = initValue, action) => {\r\n//   switch (action.type) {\r\n//     case 'filters/searchFilterChange':\r\n//       return { ...state, search: action.payload };\r\n//     case 'filters/statusFilterChange':\r\n//       return { ...state, status: action.payload };\r\n//     case 'filters/priorityFilterChange':\r\n//       return { ...state, priority: action.payload };\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n// export default filterReducer;\r\n\r\nimport { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst filtersSlice = createSlice({\r\n  name: 'filters',\r\n  initialState: {\r\n    search: '',\r\n    status: 'All',\r\n    priority: [],\r\n  },\r\n  reducers: {\r\n    searchFilterChange: (state, action) => {\r\n      state.search = action.payload;\r\n    }, // action {type: 'name/key', payload: ...}\r\n    statusFilterChange: (state, action) => {\r\n      state.status = action.payload;\r\n    },\r\n    priorityFilterChange: (state, action) => {\r\n      state.priority = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport default filtersSlice;\r\n","import { Col, Row, Input, Typography, Radio, Select, Tag } from 'antd';\r\nimport { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport filtersSlice from './filtersSlice';\r\n\r\nconst { Search } = Input;\r\n\r\nexport default function Filters() {\r\n  const [searchText, setSearchText] = useState('');\r\n  const [filterStatus, setFilterStatus] = useState('All');\r\n  const [filterPriority, setFilterPriority] = useState([]);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSearchTextChange = (e) => {\r\n    setSearchText(e.target.value);\r\n    dispatch(filtersSlice.actions.searchFilterChange(e.target.value));\r\n  };\r\n\r\n  const handleStatusChange = (e) => {\r\n    setFilterStatus(e.target.value);\r\n    dispatch(filtersSlice.actions.statusFilterChange(e.target.value));\r\n  };\r\n\r\n  const handlePriorityChange = (value) => {\r\n    setFilterPriority(value);\r\n    dispatch(filtersSlice.actions.priorityFilterChange(value));\r\n  };\r\n\r\n  return (\r\n    <Row justify='center'>\r\n      <Col span={24}>\r\n        <Typography.Paragraph style={{ fontWeight: 'bold', marginBottom: 3, marginTop: 10 }}>\r\n          Search\r\n        </Typography.Paragraph>\r\n        <Search\r\n          placeholder='input search text'\r\n          value={searchText}\r\n          onChange={(e) => handleSearchTextChange(e)}\r\n        />\r\n      </Col>\r\n      <Col sm={24}>\r\n        <Typography.Paragraph style={{ fontWeight: 'bold', marginBottom: 3, marginTop: 10 }}>\r\n          Filter By Status\r\n        </Typography.Paragraph>\r\n        <Radio.Group value={filterStatus} onChange={(e) => handleStatusChange(e)}>\r\n          <Radio value='All'>All</Radio>\r\n          <Radio value='Completed'>Completed</Radio>\r\n          <Radio value='Todo'>To do</Radio>\r\n        </Radio.Group>\r\n      </Col>\r\n      <Col sm={24}>\r\n        <Typography.Paragraph style={{ fontWeight: 'bold', marginBottom: 3, marginTop: 10 }}>\r\n          Filter By Priority\r\n        </Typography.Paragraph>\r\n        <Select\r\n          mode='multiple'\r\n          allowClear\r\n          placeholder='Please select'\r\n          style={{ width: '100%' }}\r\n          value={filterPriority}\r\n          onChange={(e) => handlePriorityChange(e)}\r\n        >\r\n          <Select.Option value='High' label='High'>\r\n            <Tag color='red'>High</Tag>\r\n          </Select.Option>\r\n          <Select.Option value='Medium' label='Medium'>\r\n            <Tag color='blue'>Medium</Tag>\r\n          </Select.Option>\r\n          <Select.Option value='Low' label='Low'>\r\n            <Tag color='gray'>Low</Tag>\r\n          </Select.Option>\r\n        </Select>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n","import { Typography, Divider } from 'antd';\r\nimport './App.css';\r\n\r\nimport TodoList from './components/TodoList/TodoList';\r\nimport Filters from './components/Filters/Filters';\r\n// import { setupServer } from './FakeAPI/FakeAPI';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport { fetchTodos } from './components/TodoList/todosSlice';\r\n// import axios from 'axios';\r\n\r\n// if (process.env.NODE_ENV === 'development') {\r\n//   setupServer();\r\n// }\r\nconst { Title } = Typography;\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(fetchTodos());\r\n  }, [dispatch]);\r\n\r\n  // useEffect(() => {\r\n  //   async function fetchData() {\r\n  //     const res = await axios.get('https://6293b734089f87a57ac4de6d.mockapi.io/list');\r\n  //     console.log('🚀 ~ file: App.js ~ line 26 ~ fetchData ~ res', res);\r\n  //   }\r\n  //   fetchData();\r\n  // }, []);\r\n  // fetch('https://6293b734089f87a57ac4de6d.mockapi.io/list', {\r\n  //   method: 'POST', // or 'PUT'\r\n  //   headers: {\r\n  //     'Content-Type': 'application/json',\r\n  //   },\r\n  //   body: JSON.stringify({\r\n  //     id: 1,\r\n  //     name: 'Learn Javascript',\r\n  //     completed: true,\r\n  //     priority: 'Medium',\r\n  //   }),\r\n  // })\r\n  //   .then((res) => res.json())\r\n  //   .then((res) => console.log(res));\r\n  // fetch('https://6293b734089f87a57ac4de6d.mockapi.io/list', {\r\n  //   method: 'GET', // or 'PUT'\r\n  //   headers: {\r\n  //     'Content-Type': 'application/json',\r\n  //   },\r\n  // })\r\n  //   .then((res) => res.json())\r\n  //   .then((data) => {\r\n  //     console.log('Success:', data);\r\n  //   })\r\n  //   .catch((error) => {\r\n  //     console.error('Error:', error);\r\n  //   });\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        width: 500,\r\n        margin: '0 auto',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        backgroundColor: 'white',\r\n        padding: 20,\r\n        boxShadow: '0 0 10px 4px #bfbfbf',\r\n        borderRadius: 5,\r\n        height: '90vh',\r\n      }}\r\n    >\r\n      <Title style={{ textAlign: 'center' }}>Todos with REDUX</Title>\r\n      <Filters />\r\n      <Divider />\r\n      <TodoList />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport filtersSlice from '../components/Filters/filtersSlice';\r\nimport todoListReducer from '../components/TodoList/todosSlice';\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    filters: filtersSlice.reducer,\r\n    todoList: todoListReducer.reducer,\r\n  },\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}